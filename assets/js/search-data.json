{
  
  "1": {
    "title": "Binding class",
    "content": "Binding class . References . https://www.vuemastery.com/courses/intro-to-vue-3/class-and-style-binding-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Binding class&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;./assets/styles.css&quot; /&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Classes&lt;/h1&gt; &lt;!-- Binding class --&gt; &lt;!-- using the v-bind --&gt; &lt;p class=&quot;greenFont&quot; v-bind:class=&quot;{largeFont: useLargeFont}&quot;&gt;Binding class using the v-bind&lt;/p&gt; &lt;!-- using the shorthand (without &#39;v-bind&#39;) --&gt; &lt;p class=&quot;greenFont&quot; :class=&quot;{smallFont: !useLargeFont}&quot;&gt;Binding class using the shorthand (without &#39;v-bind&#39;)&lt;/p&gt; &lt;p class=&quot;greenFont&quot; :class=&quot;[useLargeFont ? &#39;largeFont&#39; : &#39;smallFont&#39;]&quot;&gt;Binding class using the shorthand (without &#39;v-bind&#39;) and ternary operator&lt;/p&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { useLargeFont: true, } } }) . File: assets/styles.css . .greenFont { color: #0d8662; } .largeFont { font-size: large; } .smallFont { font-size: small; } .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/binding-class/",
    "relUrl": "/docs/vue/binding-class/"
  }
  ,"2": {
    "title": "Binding style",
    "content": "Binding style . References . https://www.vuemastery.com/courses/intro-to-vue-3/class-and-style-binding-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Binding style&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Styles&lt;/h1&gt; &lt;!-- Binding style --&gt; &lt;!-- using the v-bind --&gt; &lt;p v-bind:style=&quot;{ backgroundColor: bc, color: fc}&quot;&gt;style Binding using the v-bind&lt;/p&gt; &lt;!-- using the shorthand (without &#39;v-bind&#39;) --&gt; &lt;p :style=&quot;{ backgroundColor: bc, color: fc}&quot;&gt;style Binding using the shorthand (without &#39;v-bind&#39;)&lt;/p&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { bc: &#39;#1CA085&#39;, fc: &#39;#FFFFFF&#39;, } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/binding-style/",
    "relUrl": "/docs/vue/binding-style/"
  }
  ,"3": {
    "title": "Cassandra",
    "content": "Cassandra . . Docker Compose . File: docker-compose.yml . version: &quot;3.9&quot; services: db: container_name: &quot;quickhacks-docker-cassandra-db&quot; image: &quot;cassandra:3.11.10&quot; ports: - &quot;7000:7000&quot; - &quot;7001:7001&quot; - &quot;9042:9042&quot; - &quot;7199:7199&quot; volumes: - &quot;cassandra-db:/var/lib/cassandra&quot; healthcheck: test: [ &quot;CMD-SHELL&quot;, &quot;[ $$(nodetool statusgossip) = running ]&quot; ] start_period: &quot;5s&quot; interval: &quot;5s&quot; retries: 5 restart: &quot;always&quot; networks: - &quot;lab&quot; volumes: cassandra-db: name: &quot;quickhacks-docker-cassandra-db&quot; driver: &quot;local&quot; driver_opts: type: &quot;none&quot; o: &quot;bind&quot; device: &quot;./cassandra&quot; networks: lab: name: &quot;quickhacks-docker-cassandra-network&quot; . Versions . Docker . $ docker --version Docker version 20.10.5, build 55c4c88 . | Docker Compose . $ docker-compose --version docker-compose version 1.29.0, build 07737305 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/docker/cassandra/",
    "relUrl": "/docs/docker/cassandra/"
  }
  ,"4": {
    "title": "Terraform Commands",
    "content": "Terraform Commands . Initialise terraform . $ AWS_PROFILE=&quot;quickhacks&quot; terraform init . Or, use the -chdir argument to run the command from a different directory . $ AWS_PROFILE=&quot;quickhacks&quot; terraform -chdir=terraform init . | Format code (recursive) . $ terraform fmt -recursive . Or, use the -chdir argument to run the command from a different directory . $ terraform -chdir=terraform fmt -recursive . | Plan the changes . Without saving the plan. . $ AWS_PROFILE=&quot;quickhacks&quot; terraform plan . Saving the plan so that it can be executed later on. . $ AWS_PROFILE=&quot;quickhacks&quot; terraform plan -out quickhacks.plan . | Apply the changes . $ AWS_PROFILE=&quot;quickhacks&quot; terraform apply . Or, use the -chdir argument to run the command from a different directory . $ AWS_PROFILE=&quot;quickhacks&quot; terraform -chdir=terraform apply . | Output values . $ AWS_PROFILE=&quot;quickhacks&quot; terraform output . Or, use the -chdir argument to run the command from a different directory . $ AWS_PROFILE=&quot;quickhacks&quot; terraform -chdir=terraform output . Change the format to JSON . $ AWS_PROFILE=&quot;quickhacks&quot; terraform output -json . | Destroy the resources . $ AWS_PROFILE=&quot;quickhacks&quot; terraform destroy . Or, use the -chdir argument to run the command from a different directory . $ AWS_PROFILE=&quot;quickhacks&quot; terraform -chdir=terraform destroy . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/commands/",
    "relUrl": "/docs/aws/terraform/commands/"
  }
  ,"5": {
    "title": "Components and Nested Components",
    "content": "Components and Nested Components . References . https://www.vuemastery.com/courses/intro-to-vue-3/components-and-props-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Components&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;!-- Include the components --&gt; &lt;!-- Bind the arguments using v-bind --&gt; &lt;outer-component v-bind:speciality=&quot;true&quot;&gt;&lt;/outer-component&gt; &lt;!-- Bind the arguments using the shorthand (without &#39;v-bind&#39;) --&gt; &lt;outer-component :speciality=&quot;false&quot;&gt;&lt;/outer-component&gt; &lt;/div&gt; &lt;!-- Import App and components --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./components/OuterComponent.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./components/NestedComponent.js&quot;&gt;&lt;/script&gt; &lt;!-- Mount the app --&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { speciality: false } } }) . File: components/OuterComponent.js . app.component(&#39;outer-component&#39;, { props: { speciality: { type: Boolean, required: true } }, template: ` &lt;h1&gt;Component&lt;/h1&gt; &lt;p&gt;{{ food }}&lt;span v-if=&quot;speciality&quot;&gt; (Speciality)&lt;/span&gt;&lt;/p&gt; &lt;nested-component :ingredients=&quot;ingredients&quot;&gt;&lt;/nested-component&gt; `, data() { return { food: &#39;Pizza&#39;, ingredients: [&#39;Cheese&#39;, &#39;Pizza Dough&#39;, &#39;Mozzarella&#39;], } }, }) . File: components/NestedComponent.js . app.component(&#39;nested-component&#39;, { props: { ingredients: { type: Array, required: true } }, template: ` &lt;h2&gt;Nested Component&lt;/h2&gt; &lt;ul&gt; &lt;li v-for=&quot;ingredient in ingredients&quot;&gt;{{ ingredient }}&lt;/li&gt; &lt;/ul&gt; ` }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/components-and-nested-components/",
    "relUrl": "/docs/vue/components-and-nested-components/"
  }
  ,"6": {
    "title": "Computed Properties",
    "content": "Computed Properties . References . https://www.vuemastery.com/courses/intro-to-vue-3/computed-properties-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Computed Properties&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Hello&lt;/h1&gt; &lt;!-- Computed Properties --&gt; &lt;p&gt;{{ name + &#39; &#39; + surname }} (not computed)&lt;/p&gt; &lt;p&gt;{{ fullName }} (computed)&lt;/p&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { name: &#39;Albert&#39;, surname: &#39;Attard&#39;, } }, computed: { fullName() { return this.name + &quot; &quot; + this.surname; } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/computed-properties/",
    "relUrl": "/docs/vue/computed-properties/"
  }
  ,"7": {
    "title": "Create and Mount Vue Application",
    "content": "Create and Mount Vue Application . There are two approaches . Create and mount the application from within the JavaScript | Create the application from within the JavaScript and mount it from within the HTML | Both are valid approaches. The first one is more concise while the second one promotes reuse as the same script can be mounted to any element with needing to know its id. . Create and mount the application from within the JavaScript . File: a/index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Create App&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- This element is managed by Vue --&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Vue Application&lt;/h1&gt; &lt;p&gt;Hello: {{ message }}&lt;/p&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: a/main.js . Vue.createApp({ data() { return { message: &quot;Vue&quot; } } }).mount(&#39;#app&#39;) . Create the application from within the JavaScript and mount it from within the HTML . File: b/index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Create App&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- This element is managed by Vue --&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Vue Application&lt;/h1&gt; &lt;p&gt;Hello: {{ message }}&lt;/p&gt; &lt;/div&gt; &lt;!-- Import the script that creates the Vue Application --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;!-- Mount the view application to the element with id &#39;app&#39; --&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: b/main.js . const app = Vue.createApp({ data() { return { message: &quot;Vue&quot; } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/create-app/",
    "relUrl": "/docs/vue/create-app/"
  }
  ,"8": {
    "title": "DynamoDB",
    "content": "DynamoDB . . Terraform . File: terraform.tf . The bucket quickhacks-terraform needs to be created beforehand. Refer to create S3 bucket for more information about that. . terraform { backend &quot;s3&quot; { bucket = &quot;quickhacks-terraform&quot; key = &quot;aws/dynamodb/terraform.tfstate&quot; region = &quot;eu-central-1&quot; } } . File: providers.tf . provider &quot;aws&quot; { region = &quot;eu-central-1&quot; } . File: main.tf . resource &quot;aws_dynamodb_table&quot; &quot;quickhacks_table&quot; { name = &quot;Contacts&quot; hash_key = &quot;Name&quot; read_capacity = 20 write_capacity = 20 attribute { name = &quot;Name&quot; type = &quot;S&quot; } tags = { Name = &quot;Quickhacks - DynamoDB Table&quot; Quickhack = &quot;DynamoDB&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_dynamodb_table_item&quot; &quot;quickhacks_data&quot; { table_name = aws_dynamodb_table.quickhacks_table.name hash_key = aws_dynamodb_table.quickhacks_table.hash_key item = &lt;&lt;EOF { &quot;Name&quot;: {&quot;S&quot;: &quot;Albert&quot;}, &quot;Surname&quot;: {&quot;S&quot;: &quot;Attard&quot;}, &quot;Location&quot;: {&quot;S&quot;: &quot;Köln&quot;} } EOF } . Fetch item by key . $ AWS_PROFILE=&quot;quickhacks&quot; aws dynamodb get-item --table-name Contacts --key &quot;{ &quot;Name &quot;: { &quot;S &quot;: &quot;Albert &quot;}}&quot; { &quot;Item&quot;: { &quot;Location&quot;: { &quot;S&quot;: &quot;Köln&quot; }, &quot;Surname&quot;: { &quot;S&quot;: &quot;Attard&quot; }, &quot;Name&quot;: { &quot;S&quot;: &quot;Albert&quot; } } } . Versions . Terraform . $ terraform --version Terraform v0.15.0 . | AWS CLI . $ aws --version aws-cli/2.1.30 Python/3.9.2 Darwin/20.4.0 source/x86_64 prompt/off . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/dynamodb/",
    "relUrl": "/docs/aws/terraform/dynamodb/"
  }
  ,"9": {
    "title": "EC2 (Publicly Accessible)",
    "content": "EC2 (Publicly Accessible) . . Acknowledgements . Punit Kumar, for reviewing the diagram and providing feedback. . AWS Resources . . Terraform . File: terraform.tf . The bucket quickhacks-terraform needs to be created beforehand. Refer to create S3 bucket for more information about that. . terraform { backend &quot;s3&quot; { bucket = &quot;quickhacks-terraform&quot; key = &quot;aws/ec2-publicly-accessible/terraform.tfstate&quot; region = &quot;eu-central-1&quot; } } . File: providers.tf . provider &quot;aws&quot; { region = &quot;eu-central-1&quot; } . File: main.tf . The key pair (SSH key) Quickhacks SSH Key needs to be created beforehand. Refer to create key pair for more information about that. . resource &quot;aws_vpc&quot; &quot;quickhacks_vpc&quot; { cidr_block = &quot;172.16.0.0/16&quot; enable_dns_support = true enable_dns_hostnames = true tags = { Name = &quot;Quickhacks - VPC&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_security_group&quot; &quot;quickhacks_sg_allow_ssh&quot; { name = &quot;quickhacks-sg-allow-ssh-for-everyone&quot; description = &quot;Enable SSH (22) from anywhere on the internet&quot; vpc_id = aws_vpc.quickhacks_vpc.id ingress { cidr_blocks = [&quot;0.0.0.0/0&quot;] from_port = 22 to_port = 22 protocol = &quot;tcp&quot; description = &quot;Enable SSH (22) from anywhere on the internet&quot; } /* Terraform removes the default rule, this we need to add it */ egress { from_port = 0 to_port = 0 protocol = &quot;-1&quot; cidr_blocks = [&quot;0.0.0.0/0&quot;] } tags = { Name = &quot;Quickhacks - Security Group&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_subnet&quot; &quot;quickhacks_subnet&quot; { vpc_id = aws_vpc.quickhacks_vpc.id cidr_block = &quot;172.16.10.0/24&quot; availability_zone = &quot;eu-central-1a&quot; tags = { Name = &quot;Quickhacks - Subnet&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_network_interface&quot; &quot;quickhacks_nic&quot; { description = &quot;Network interface to be used by the EC2 instance&quot; subnet_id = aws_subnet.quickhacks_subnet.id private_ips = [&quot;172.16.10.100&quot;] security_groups = [aws_security_group.quickhacks_sg_allow_ssh.id] tags = { Name = &quot;Quickhacks - NIC&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_instance&quot; &quot;quickhacks_ec2&quot; { ami = &quot;ami-00a205cb8e06c3c4e&quot; instance_type = &quot;t2.micro&quot; key_name = &quot;Quickhacks SSH Key&quot; network_interface { network_interface_id = aws_network_interface.quickhacks_nic.id device_index = 0 } volume_tags = { Name = &quot;Quickhacks - EBS Root Volume&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } tags = { Name = &quot;Quickhacks - EC2 Instance&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_ebs_volume&quot; &quot;quickhacks_volume&quot; { availability_zone = &quot;eu-central-1a&quot; size = 10 tags = { Name = &quot;Quickhacks - EBS Volume&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_volume_attachment&quot; &quot;quickhacks_volume_attachment&quot; { device_name = &quot;/dev/sdh&quot; volume_id = aws_ebs_volume.quickhacks_volume.id instance_id = aws_instance.quickhacks_ec2.id } resource &quot;aws_eip&quot; &quot;quickhacks_eip&quot; { associate_with_private_ip = aws_network_interface.quickhacks_nic.private_ip vpc = true tags = { Name = &quot;Quickhacks - Elastic IP&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_internet_gateway&quot; &quot;quickhacks_gateway&quot; { vpc_id = aws_vpc.quickhacks_vpc.id tags = { Name = &quot;Quickhacks - Internet Gateway&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_route_table&quot; &quot;quickhacks_route_table&quot; { vpc_id = aws_vpc.quickhacks_vpc.id route { cidr_block = &quot;0.0.0.0/0&quot; gateway_id = aws_internet_gateway.quickhacks_gateway.id } tags = { Name = &quot;Quickhacks - Route Table&quot; Quickhack = &quot;EC2 - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_route_table_association&quot; &quot;quickhacks_route_table_association&quot; { subnet_id = aws_subnet.quickhacks_subnet.id route_table_id = aws_route_table.quickhacks_route_table.id } . File: output.tf . output &quot;instance_ip&quot; { description = &quot;Elastic (public) IP, associated to the network interface connected to the EC2 instance&quot; value = coalesce(aws_eip.quickhacks_eip.*.public_ip) } . SSH to EC2 . Connect to the EC2 instance using the private key . $ ssh -i &quot;quickhacks.pem&quot; ec2-user@$(AWS_PROFILE=&quot;quickhacks&quot; terraform output -json instance_ip | jq -r &quot;.[0]&quot;) . Versions . Terraform . $ terraform --version Terraform v0.15.0 . | SSH . $ ssh -V OpenSSH_8.1p1, LibreSSL 2.7.3 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/ec2-publicly-accessible/",
    "relUrl": "/docs/aws/terraform/ec2-publicly-accessible/"
  }
  ,"10": {
    "title": "Emit Events",
    "content": "Emit Events . References . https://www.vuemastery.com/courses/intro-to-vue-3/communicating-events-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Emit Events&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Counter&lt;/h1&gt; &lt;p&gt;Clicks: {{ clicks }}&lt;/p&gt; &lt;!-- Listen to the events emitted by the component --&gt; &lt;controls-component @increase-counter=&quot;increment&quot; @decrease-counter=&quot;decrementIfGreaterThanZero&quot; @reset-counter=&quot;clicks = 0&quot; &gt;&lt;/controls-component&gt; &lt;/div&gt; &lt;!-- Import App and components --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;./components/ControlsComponent.js&quot;&gt;&lt;/script&gt; &lt;!-- Mount the app --&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { clicks: 0 } }, methods: { increment(by) { this.clicks += Math.abs(by) }, decrementIfGreaterThanZero() { if (this.clicks &gt; 0) { this.clicks -= 1 } } } }) . File: components/ControlsComponent.js . app.component(&#39;controls-component&#39;, { template: ` &lt;button @click=&quot;increase(1)&quot;&gt;Increase by 1&lt;/button&gt; &lt;button @click=&quot;increase(5)&quot;&gt;Increase by 5&lt;/button&gt; &lt;button @click=&quot;decrease&quot;&gt;Decrease&lt;/button&gt; &lt;button @click=&quot;reset&quot;&gt;Reset&lt;/button&gt; `, methods: { increase(by) { this.$emit(&quot;increase-counter&quot;, by) }, decrease() { this.$emit(&quot;decrease-counter&quot;) }, reset() { this.$emit(&quot;reset-counter&quot;) }, }, }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/emit-events/",
    "relUrl": "/docs/vue/emit-events/"
  }
  ,"11": {
    "title": "for Loop",
    "content": "for Loop . References . https://www.vuemastery.com/courses/intro-to-vue-3/list-rendering-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;for Loop&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Ingredients&lt;/h1&gt; &lt;!-- for Loop --&gt; &lt;!-- without index --&gt; &lt;ul&gt; &lt;li v-for=&quot;ingredient in ingredients&quot; :key=&quot;ingredient.id&quot;&gt;{{ ingredient.name }}&lt;/li&gt; &lt;/ul&gt; &lt;!-- with index --&gt; &lt;div v-for=&quot;(ingredient, index) in ingredients&quot; :key=&quot;ingredient.id&quot;&gt; &lt;span&gt;Index [{{ index }}] - &lt;/span&gt; &lt;span&gt;{{ ingredient.name }}&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { ingredients: [ {id: 1, name: &#39;Cheese&#39;}, {id: 2, name: &#39;Pizza Dough&#39;}, {id: 3, name: &#39;Mozzarella&#39;} ] } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/for-loop/",
    "relUrl": "/docs/vue/for-loop/"
  }
  ,"12": {
    "title": "Forms and v-model",
    "content": "Forms and v-model . References . https://www.vuemastery.com/courses/intro-to-vue-3/forms-and-v-model-vue3 | https://v3.vuejs.org/guide/component-custom-events.html#handling-v-model-modifiers | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;Forms and v-model&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Reviews&lt;/h1&gt; &lt;!-- Prevent from being submitted automatically and wire it to invoke our &#39;onSubmit()&#39; method instead --&gt; &lt;form @submit.prevent=&quot;submitReview&quot;&gt; &lt;div v-if=&quot;warning.show&quot;&gt;{{ warning.message }}&lt;/div&gt; &lt;!-- String/text input --&gt; &lt;div&gt; &lt;label for=&quot;name&quot;&gt;Name: &lt;/label&gt; &lt;!-- Bind the property using the v-model --&gt; &lt;input id=&quot;name&quot; v-model=&quot;name&quot; /&gt; &lt;/div&gt; &lt;!-- Numeric input --&gt; &lt;div&gt; &lt;label for=&quot;rating&quot;&gt;Ratings: &lt;/label&gt; &lt;!-- Bind the property using the v-model and type cast it as a number --&gt; &lt;select id=&quot;rating&quot; v-model.number=&quot;rating&quot;&gt; &lt;option&gt;5&lt;/option&gt; &lt;option&gt;4&lt;/option&gt; &lt;option&gt;3&lt;/option&gt; &lt;option&gt;2&lt;/option&gt; &lt;option&gt;1&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;!-- Boolean input --&gt; &lt;div&gt; &lt;label for=&quot;publish&quot;&gt;Publish: &lt;/label&gt; &lt;!-- Bind the property using the v-model--&gt; &lt;input id=&quot;publish&quot; v-model=&quot;publish&quot; type=&quot;checkbox&quot; /&gt; &lt;/div&gt; &lt;input type=&quot;submit&quot; value=&quot;Submit Review&quot; /&gt; &lt;/form&gt; &lt;!-- The properties are updated automatically --&gt; &lt;h2&gt;Bound properties&lt;/h2&gt; &lt;div&gt; &lt;div&gt;Name: {{ name }}&lt;/div&gt; &lt;div&gt;Rating: {{ rating }}&lt;/div&gt; &lt;div v-if=&quot;publish&quot;&gt;Publish review&lt;/div&gt; &lt;/div&gt; &lt;!-- The reset button will update both --&gt; &lt;button @click=&quot;reset&quot;&gt;Reset&lt;/button&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { name: &quot;&quot;, rating: 5, publish: true, warning: {show: false} } }, methods: { reset() { this.name = &quot;&quot; this.rating = 5 this.publish = true this.warning = {show: false} }, submitReview() { if (this.name === &#39;&#39;) { this.warning = {show: true, message: &quot;Please fill the name before submitting the review&quot;} return } const review = { name: this.name, rating: this.rating, publish: this.publish } /* The object can be emitted instead of simply logged */ // this.$emit(&#39;review-submitted&#39;, review) console.log(&quot;Review&quot;, review) this.reset() }, } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/forms-and-v-model/",
    "relUrl": "/docs/vue/forms-and-v-model/"
  }
  ,"13": {
    "title": "Gradle Wrapper",
    "content": "Gradle Wrapper . Blank Projects . A blank project containing just the gradle wrapper. . SSH . $ git clone git@github.com:albertattard/blank-gradle-project.git . | HTTPS . $ git clone https://github.com/albertattard/blank-gradle-project.git . | . Version . $ ./gradlew --version . Set Version . You can update, or downgrade, Gradle Wrapper version used . $ ./gradlew wrapper --gradle-version 7.0 . It is recommended to set the SHA256 signature if the Gradle Wrapper to mitigate against man in the middle attacks, and verify that the correct version of Gradle Wrapper is used. . $ ./gradlew wrapper --gradle-distribution-sha256-sum=eb8b89184261025b0430f5b2233701ff1377f96da1ef5e278af6ae8bac5cc305 . A full list of SHA256 signatures is found here. . Kindly note that the checksum verification is only performed when the Gradle Wrapper distribution hasn’t been downloaded yet. The Gradle Wrapper distribution is not verified if this was already downloaded. The wrapper can be deleted as shown next. . $ rm -rf ~/.gradle/wrapper/dists/gradle-7.0-bin . It is also good to verify the Gradle Wrapper JAR file as this is an important part of the build. GitHub provides an action for that already. .",
    "url": "https://albertattard.github.io/quickhacks/docs/cradle/gradlew/",
    "relUrl": "/docs/cradle/gradlew/"
  }
  ,"14": {
    "title": "if-else Ladder",
    "content": "if-else Ladder . References . https://www.vuemastery.com/courses/intro-to-vue-3/conditional-rendering-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;if-else Ladder&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Exam Grade&lt;/h1&gt; &lt;p&gt;Exam Mark: {{ examMark }}&lt;/p&gt; &lt;p&gt; &lt;span&gt;Grade: &lt;/span&gt; &lt;!-- if-else Ladder --&gt; &lt;span v-if=&quot;examMark &gt;= 90&quot;&gt;A&lt;/span&gt; &lt;span v-else-if=&quot;examMark &gt;= 75&quot;&gt;B&lt;/span&gt; &lt;span v-else-if=&quot;examMark &gt;= 50&quot;&gt;C&lt;/span&gt; &lt;span v-else-if=&quot;examMark &gt;= 35&quot;&gt;D&lt;/span&gt; &lt;span v-else&gt;Failed&lt;/span&gt; &lt;/p&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { examMark: 80 } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/if-else-ladder/",
    "relUrl": "/docs/vue/if-else-ladder/"
  }
  ,"15": {
    "title": "AWS",
    "content": "AWS .",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/",
    "relUrl": "/docs/aws/"
  }
  ,"16": {
    "title": "Terraform",
    "content": "Terraform . A set of AWS and Terraform quickhacks. .",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/",
    "relUrl": "/docs/aws/terraform/"
  }
  ,"17": {
    "title": "CLI",
    "content": "CLI . A set of AWS CLI quickhacks. .",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/cli/",
    "relUrl": "/docs/aws/cli/"
  }
  ,"18": {
    "title": "Vue",
    "content": "Vue . A set of Vue quickhacks. .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/",
    "relUrl": "/docs/vue/"
  }
  ,"19": {
    "title": "Gradle",
    "content": "Gradle . A set of Gradle and Gradle Wrapper quickhacks. .",
    "url": "https://albertattard.github.io/quickhacks/docs/gradle/",
    "relUrl": "/docs/gradle/"
  }
  ,"20": {
    "title": "Java",
    "content": "Java . A set of Java quickhacks. .",
    "url": "https://albertattard.github.io/quickhacks/docs/java/",
    "relUrl": "/docs/java/"
  }
  ,"21": {
    "title": "Home",
    "content": "Quickhacks . Many times I had to look for an old example where I did something similar, like create an S3 bucket using Terraform. I have decided to compile a list of code fragments and short examples and called this compilation quickhacks. I got the name from the Cyberpunk 2077 game. As a netrunner you can use quickhacks to defeat your challenges and proceed. I love that game despite its many flaws. . The quickhacks are not meant to be a tutorial nor to provide detailed descriptions. Instead, these are meant to be a quick reference of code fragments. .",
    "url": "https://albertattard.github.io/quickhacks/",
    "relUrl": "/"
  }
  ,"22": {
    "title": "Docker",
    "content": "Docker . A set of docker and docker-compose quickhacks. .",
    "url": "https://albertattard.github.io/quickhacks/docs/docker/",
    "relUrl": "/docs/docker/"
  }
  ,"23": {
    "title": "Jupyter",
    "content": "Jupyter . . Docker Compose . File: docker-compose.yml . version: &quot;3.9&quot; services: jupyter: container_name: &quot;quickhacks-docker-jupyter-jupyter&quot; build: &quot;docker/jupyter&quot; ports: - &quot;8888:8888&quot; volumes: - &quot;jupyter:/home/jovyan/work&quot; healthcheck: start_period: &quot;5s&quot; interval: &quot;5s&quot; retries: 5 restart: &quot;always&quot; depends_on: db: condition: &quot;service_healthy&quot; networks: - &quot;quickhacks&quot; volumes: jupyter: name: &quot;quickhacks-docker-jupyter-jupyter&quot; driver: &quot;local&quot; driver_opts: type: &quot;none&quot; o: &quot;bind&quot; device: &quot;./work&quot; networks: quickhacks: name: &quot;quickhacks-docker-jupyter-network&quot; . File: docker/jupyter/Dockerfile . # I had to downgrade as the newer version was raising a ResourceClosedError everytime I ran a query that returned # nothing, such as an INSERT statement. # FROM jupyter/datascience-notebook:python-3.8.8 FROM jupyter/datascience-notebook:python-3.7.6 USER root RUN apt update &amp;&amp; apt install -y gnupg2 wget ca-certificates postgresql postgresql-contrib default-jdk USER jovyan RUN pip install ipython-sql psycopg2-binary pyspark # There does not seem to be a standard way to have healthcheck for Jupyer notbooks according to # https://github.com/jupyter/docker-stacks/issues/915. HEALTHCHECK CMD pgrep &quot;jupyter&quot; &gt; /dev/null || exit 1 . Version . Docker . $ docker --version Docker version 20.10.5, build 55c4c88 . | Docker Compose . $ docker-compose --version docker-compose version 1.29.0, build 07737305 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/docker/jupyter/",
    "relUrl": "/docs/docker/jupyter/"
  }
  ,"24": {
    "title": "Key Pair (SSH Key)",
    "content": "Key Pair (SSH Key) . . Create Key Pair . The following make use of jq, which can be installed using brew. . $ AWS_PROFILE=&quot;quickhacks&quot; aws ec2 create-key-pair --key-name &quot;Quickhacks SSH Key&quot; --region eu-central-1 | jq -r &quot;.KeyMaterial&quot; &gt; ./quickhacks.pem . Restrict the permissions of the key as otherwise it cannot be used. . $ chmod 400 quickhacks.pem . Delete Key Pair . $ AWS_PROFILE=&quot;quickhacks&quot; aws ec2 delete-key-pair --key-name &quot;Quickhacks SSH Key&quot; . Delete the private key file. . $ rm quickhacks.pem . Versions . AWS CLI . $ aws --version aws-cli/2.1.30 Python/3.9.2 Darwin/20.3.0 source/x86_64 prompt/off . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/cli/key-pair/",
    "relUrl": "/docs/aws/cli/key-pair/"
  }
  ,"25": {
    "title": "Lambda (API Gateway)",
    "content": "Lambda (API Gateway) . . Terraform . File: terraform.tf . The bucket quickhacks-terraform needs to be created beforehand. Refer to create S3 bucket for more information about that. . terraform { backend &quot;s3&quot; { bucket = &quot;quickhacks-terraform&quot; key = &quot;aws/lambda-api-gateway/terraform.tfstate&quot; region = &quot;eu-central-1&quot; } } . File: providers.tf . provider &quot;aws&quot; { region = &quot;eu-central-1&quot; } . File: main.tf . The Lambda distribution file lambda.zip is saved in the same folder as the main.tf file. Also, change the runtime and handler as required. . locals { lambda_zip_file = &quot;${path.module}/lambda.zip&quot; lambda_function_name = &quot;quickhacks-lambda-function&quot; } resource &quot;aws_iam_role&quot; &quot;quickhacks_iam_for_lambda&quot; { name = &quot;quickhacks_iam_for_lambda&quot; description = &quot;Allow the lambda function to assume roles&quot; assume_role_policy = &lt;&lt;EOF { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Action&quot;: &quot;sts:AssumeRole&quot;, &quot;Principal&quot;: { &quot;Service&quot;: &quot;lambda.amazonaws.com&quot; }, &quot;Effect&quot;: &quot;Allow&quot; } ] } EOF tags = { Name = &quot;Quickhacks - Lambda IAM Role&quot; Quickhack = &quot;Lambda - API Gateway&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_lambda_function&quot; &quot;quickhacks_lambda_function&quot; { function_name = local.lambda_function_name description = &quot;Quickhacks Lambda Function&quot; filename = local.lambda_zip_file source_code_hash = filebase64sha256(local.lambda_zip_file) handler = &quot;exports.handler&quot; runtime = &quot;nodejs12.x&quot; role = aws_iam_role.quickhacks_iam_for_lambda.arn environment { variables = { name = &quot;Quickhacks - Lambda&quot; Quickhack = &quot;Lambda - API Gateway&quot; ManagedBy = &quot;Terraform&quot; } } tags = { Name = &quot;Quickhacks - Lambda Function&quot; Quickhack = &quot;Lambda - API Gateway&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_api_gateway_rest_api&quot; &quot;quickhacks_gateway&quot; { name = &quot;quickhacks_api_gateway_rest_api&quot; description = &quot;Quickhacks - API Gateway Rest API&quot; tags = { Name = &quot;Quickhacks - API Gateway&quot; Quickhack = &quot;Lambda - API Gateway&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_api_gateway_resource&quot; &quot;quickhacks_proxy&quot; { rest_api_id = aws_api_gateway_rest_api.quickhacks_gateway.id parent_id = aws_api_gateway_rest_api.quickhacks_gateway.root_resource_id path_part = &quot;{proxy+}&quot; } resource &quot;aws_api_gateway_method&quot; &quot;quickhacks_proxy&quot; { rest_api_id = aws_api_gateway_rest_api.quickhacks_gateway.id resource_id = aws_api_gateway_resource.quickhacks_proxy.id http_method = &quot;ANY&quot; authorization = &quot;NONE&quot; } resource &quot;aws_api_gateway_integration&quot; &quot;quickhacks_lambda&quot; { rest_api_id = aws_api_gateway_rest_api.quickhacks_gateway.id resource_id = aws_api_gateway_method.quickhacks_proxy.resource_id http_method = aws_api_gateway_method.quickhacks_proxy.http_method integration_http_method = &quot;POST&quot; type = &quot;AWS_PROXY&quot; uri = aws_lambda_function.quickhacks_lambda_function.invoke_arn } resource &quot;aws_api_gateway_method&quot; &quot;quickhacks_proxy_root&quot; { rest_api_id = aws_api_gateway_rest_api.quickhacks_gateway.id resource_id = aws_api_gateway_rest_api.quickhacks_gateway.root_resource_id http_method = &quot;ANY&quot; authorization = &quot;NONE&quot; } resource &quot;aws_api_gateway_integration&quot; &quot;quickhacks_lambda_root&quot; { rest_api_id = aws_api_gateway_rest_api.quickhacks_gateway.id resource_id = aws_api_gateway_method.quickhacks_proxy_root.resource_id http_method = aws_api_gateway_method.quickhacks_proxy_root.http_method integration_http_method = &quot;POST&quot; type = &quot;AWS_PROXY&quot; uri = aws_lambda_function.quickhacks_lambda_function.invoke_arn } resource &quot;aws_api_gateway_deployment&quot; &quot;quickhacks_deployment&quot; { description = &quot;Quickhacks Deployment&quot; depends_on = [ aws_api_gateway_integration.quickhacks_lambda, aws_api_gateway_integration.quickhacks_lambda_root, ] rest_api_id = aws_api_gateway_rest_api.quickhacks_gateway.id stage_name = &quot;test&quot; } resource &quot;aws_lambda_permission&quot; &quot;quickhacks_permissions&quot; { statement_id = &quot;AllowAPIGatewayInvoke&quot; action = &quot;lambda:InvokeFunction&quot; function_name = aws_lambda_function.quickhacks_lambda_function.function_name principal = &quot;apigateway.amazonaws.com&quot; # The &quot;/*/*&quot; portion grants access from any method on any resource # within the API Gateway REST API. source_arn = &quot;${aws_api_gateway_rest_api.quickhacks_gateway.execution_arn}/*/*&quot; } resource &quot;aws_cloudwatch_log_group&quot; &quot;quickhacks_cloudwatch_log_group&quot; { name = &quot;/aws/lambda/${local.lambda_function_name}&quot; retention_in_days = 1 tags = { Name = &quot;Quickhacks - Cloudwatch Log Group&quot; Quickhack = &quot;Lambda - API Gateway&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_iam_policy&quot; &quot;quickhacks_lambda_logging&quot; { name = &quot;quickhacks_lambda_logging&quot; path = &quot;/&quot; description = &quot;Enable the lambda function to write logs in CloudWatch&quot; policy = &lt;&lt;EOF { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Action&quot;: [ &quot;logs:CreateLogGroup&quot;, &quot;logs:CreateLogStream&quot;, &quot;logs:PutLogEvents&quot; ], &quot;Resource&quot;: &quot;arn:aws:logs:*:*:*&quot;, &quot;Effect&quot;: &quot;Allow&quot; } ] } EOF } resource &quot;aws_iam_role_policy_attachment&quot; &quot;quickhacks_lambda_logging_policy_attachment&quot; { role = aws_iam_role.quickhacks_iam_for_lambda.name policy_arn = aws_iam_policy.quickhacks_lambda_logging.arn } . File: output.tf . output &quot;invoke_url&quot; { description = &quot;The Lambda function invoke URL&quot; value = aws_api_gateway_deployment.quickhacks_deployment.invoke_url } . Invoke Lambda . Make an HTTP request to the lambda function . $ curl $(AWS_PROFILE=&quot;quickhacks&quot; terraform output -json invoke_url | jq -r &quot;.&quot;) | jq { &quot;quickhacks&quot;: &quot;Lambda (API Gateway)&quot; } . Versions . Terraform . $ terraform --version Terraform v0.15.0 . | cURL . $ curl --version curl 7.64.1 (x86_64-apple-darwin20.0) libcurl/7.64.1 (SecureTransport) LibreSSL/2.8.3 zlib/1.2.11 nghttp2/1.41.0 Release-Date: 2019-03-27 Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp smb smbs smtp smtps telnet tftp Features: AsynchDNS GSS-API HTTP2 HTTPS-proxy IPv6 Kerberos Largefile libz MultiSSL NTLM NTLM_WB SPNEGO SSL UnixSockets . | jq . $ jq --version jq-1.6 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/lambda-api-gateway/",
    "relUrl": "/docs/aws/terraform/lambda-api-gateway/"
  }
  ,"26": {
    "title": "Logs",
    "content": "Logs . . Tail . $ AWS_PROFILE=&quot;quickhacks&quot; aws logs tail /aws/lambda/lambda-function --region eu-central-1 . Versions . AWS CLI . $ aws --version aws-cli/2.1.30 Python/3.9.2 Darwin/20.3.0 source/x86_64 prompt/off . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/cli/logs/",
    "relUrl": "/docs/aws/cli/logs/"
  }
  ,"27": {
    "title": "on click",
    "content": "on click . References . https://www.vuemastery.com/courses/intro-to-vue-3/event-handling-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;on click&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Counter&lt;/h1&gt; &lt;p&gt;Clicks: {{ clicks }}&lt;/p&gt; &lt;!-- on click --&gt; &lt;!-- Modify the data directly --&gt; &lt;button v-on:click=&quot;clicks += 1&quot;&gt;Increase&lt;/button&gt; &lt;!-- Invoke a method --&gt; &lt;button v-on:click=&quot;decrementIfGreaterThanZero&quot;&gt;Decrease&lt;/button&gt; &lt;!-- Use the shorthand &#39;@&#39; --&gt; &lt;button @click=&quot;clicks = 0&quot;&gt;Reset&lt;/button&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { clicks: 0 } }, methods: { decrementIfGreaterThanZero() { if (this.clicks &gt; 0) { this.clicks -= 1 } } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/on-click/",
    "relUrl": "/docs/vue/on-click/"
  }
  ,"28": {
    "title": "on mouseover (on hover)",
    "content": "on mouseover (on hover) . References . https://www.vuemastery.com/courses/intro-to-vue-3/event-handling-vue3 | . File: index.html . &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;on mouseover (hover)&lt;/title&gt; &lt;script src=&quot;https://unpkg.com/vue@3.0.11/dist/vue.global.prod.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;h1&gt;Months&lt;/h1&gt; &lt;p&gt;Month: {{ month }}&lt;/p&gt; &lt;ul&gt; &lt;li v-for=&quot;student in students&quot; @mouseover=&quot;changeMonth(student.month)&quot;&gt;{{ student.name }}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;!-- Import and mount the App --&gt; &lt;script src=&quot;./main.js&quot;&gt;&lt;/script&gt; &lt;script&gt;const mountedApp = app.mount(&#39;#app&#39;)&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; . File: main.js . const app = Vue.createApp({ data() { return { month: &#39;-&#39;, students: [ {id: 1, name: &#39;Albert&#39;, month: &#39;November&#39;}, {id: 2, name: &#39;Rodianne&#39;, month: &#39;December&#39;}, {id: 3, name: &#39;Jade&#39;, month: &#39;February&#39;}, {id: 4, name: &#39;Aden&#39;, month: &#39;April&#39;}, ] } }, methods: { changeMonth(month) { this.month = month } } }) .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/on-mouseover/",
    "relUrl": "/docs/vue/on-mouseover/"
  }
  ,"29": {
    "title": "PostgreSQL",
    "content": "PostgreSQL . . Docker Compose . File: docker-compose.yml . version: &quot;3.9&quot; services: db: container_name: &quot;quickhacks-docker-postgresql-db&quot; image: &quot;postgres:13.2-alpine&quot; ports: - &quot;5432:5432&quot; environment: POSTGRES_DB: &quot;db-quickhacks&quot; POSTGRES_PASSWORD: &quot;db-password&quot; POSTGRES_USER: &quot;db-username&quot; volumes: - &quot;postgres-db:/var/lib/postgresql/data&quot; healthcheck: test: [ &quot;CMD&quot;, &quot;pg_isready&quot;, &quot;-U&quot;, &quot;db-username&quot; ] start_period: &quot;5s&quot; interval: &quot;5s&quot; retries: 5 restart: &quot;always&quot; networks: - &quot;quickhacks&quot; volumes: postgres-db: name: &quot;quickhacks-docker-postgresql-db&quot; driver: &quot;local&quot; driver_opts: type: &quot;none&quot; o: &quot;bind&quot; device: &quot;./postgres&quot; networks: quickhacks: name: &quot;quickhacks-docker-postgresql-network&quot; . Versions . Docker . $ docker --version Docker version 20.10.5, build 55c4c88 . | Docker Compose . $ docker-compose --version docker-compose version 1.29.0, build 07737305 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/docker/postgresql/",
    "relUrl": "/docs/docker/postgresql/"
  }
  ,"30": {
    "title": "RDS Postgres (Publicly Accessible)",
    "content": "RDS Postgres (Publicly Accessible) . &#9888; The following example does not work as expected and I still need to look into it!! {%- if include.details -%} {{ include.details }} {%- endif -%} . Terraform . &#9432; Note {%- if include.details -%} {{ include.details }} {%- endif -%} File: terraform.tf . The bucket quickhacks-terraform needs to be created beforehand. Refer to create S3 bucket for more information about that. . terraform { backend &quot;s3&quot; { bucket = &quot;quickhacks-terraform&quot; key = &quot;aws/rds-postgres-publicly-accessible/terraform.tfstate&quot; region = &quot;eu-central-1&quot; } } . File: providers.tf . provider &quot;aws&quot; { region = &quot;eu-central-1&quot; } . File: main.tf . resource &quot;aws_vpc&quot; &quot;quickhacks_vpc&quot; { cidr_block = &quot;172.16.0.0/16&quot; enable_dns_support = true enable_dns_hostnames = true tags = { Name = &quot;Quickhacks - VPC&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_internet_gateway&quot; &quot;quickhacks_internet_gateway&quot; { vpc_id = aws_vpc.quickhacks_vpc.id tags = { Name = &quot;Quickhacks - Internet Gateway&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_route_table&quot; &quot;quickhacks_routing_table&quot; { vpc_id = aws_vpc.quickhacks_vpc.id route { cidr_block = &quot;0.0.0.0/0&quot; gateway_id = aws_internet_gateway.quickhacks_internet_gateway.id } tags = { Name = &quot;Quickhacks - Routing Table&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_security_group&quot; &quot;quickhacks_sg_allow_postgresql&quot; { name = &quot;quickhacks-sg-allow-postgres-for-everyone&quot; description = &quot;Enable Postgres connection (5432) from anywhere on the internet&quot; vpc_id = aws_vpc.quickhacks_vpc.id ingress { description = &quot;Enable Postgres connection (5432) from anywhere on the internet&quot; cidr_blocks = [&quot;0.0.0.0/0&quot;] from_port = 5432 to_port = 5432 protocol = &quot;tcp&quot; } /* Terraform removes the default rule, this we need to add it */ egress { from_port = 0 to_port = 0 protocol = &quot;-1&quot; cidr_blocks = [&quot;0.0.0.0/0&quot;] } tags = { Name = &quot;Quickhacks - Security Group&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_subnet&quot; &quot;quickhacks_subnet_a&quot; { vpc_id = aws_vpc.quickhacks_vpc.id cidr_block = &quot;172.16.10.0/24&quot; availability_zone = &quot;eu-central-1a&quot; tags = { Name = &quot;Quickhacks - Public Subnet 10/A&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_subnet&quot; &quot;quickhacks_subnet_b&quot; { vpc_id = aws_vpc.quickhacks_vpc.id cidr_block = &quot;172.16.11.0/24&quot; availability_zone = &quot;eu-central-1b&quot; tags = { Name = &quot;Quickhacks - Public Subnet 11/B&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_subnet&quot; &quot;quickhacks_subnet_c&quot; { vpc_id = aws_vpc.quickhacks_vpc.id cidr_block = &quot;172.16.12.0/24&quot; availability_zone = &quot;eu-central-1c&quot; tags = { Name = &quot;Quickhacks - Public Subnet 12/C&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_db_subnet_group&quot; &quot;quickhacks_db_subnet&quot; { name = &quot;quickhacks_db_subnet&quot; subnet_ids = [aws_subnet.quickhacks_subnet_a.id, aws_subnet.quickhacks_subnet_b.id, aws_subnet.quickhacks_subnet_c.id] tags = { Name = &quot;Quickhacks - DB Subnet&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_route_table_association&quot; &quot;quickhacks_route_table_association&quot; { subnet_id = aws_db_subnet_group.quickhacks_db_subnet.id route_table_id = aws_route_table.quickhacks_routing_table.id } resource &quot;random_password&quot; &quot;quickhacks_db_password&quot; { length = 16 special = true override_special = &quot;_%@&quot; } resource &quot;aws_db_instance&quot; &quot;quickhacks_db&quot; { allocated_storage = 20 storage_type = &quot;gp2&quot; engine = &quot;postgres&quot; engine_version = &quot;12.4&quot; instance_class = &quot;db.t2.micro&quot; name = &quot;quickhacks_db&quot; username = &quot;quickhacks&quot; password = random_password.quickhacks_db_password.result apply_immediately = true identifier = &quot;quickhacks-db&quot; skip_final_snapshot = true publicly_accessible = true db_subnet_group_name = aws_db_subnet_group.quickhacks_db_subnet.name tags = { Name = &quot;Quickhacks - DB&quot; Quickhack = &quot;RDS Postgres - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } . File: output.tf . output &quot;db_address&quot; { description = &quot;The database hostname&quot; value = aws_db_instance.quickhacks_db.address } output &quot;db_password&quot; { description = &quot;The randomly generated password&quot; value = aws_db_instance.quickhacks_db.password sensitive = true } . Connect to the database . 🚧 Pending 🚧 {%- if include.details -%} {{ include.details }} {%- endif -%} $ . Versions . Terraform . $ terraform --version Terraform v0.15.0 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/rds-postgres-publicly-accessible/",
    "relUrl": "/docs/aws/terraform/rds-postgres-publicly-accessible/"
  }
  ,"31": {
    "title": "Redshift Cluster (Publicly Accessible)",
    "content": "Redshift Cluster (Publicly Accessible) . . Terraform . &#9432; Note {%- if include.details -%} {{ include.details }} {%- endif -%} File: terraform.tf . The bucket quickhacks-terraform needs to be created beforehand. Refer to create S3 bucket for more information about that. . terraform { backend &quot;s3&quot; { bucket = &quot;quickhacks-terraform&quot; key = &quot;aws/redshift-cluster-publicly-accessible/terraform.tfstate&quot; region = &quot;eu-central-1&quot; } } . File: providers.tf . provider &quot;aws&quot; { // I was getting errors and had to switch to the region where the bucket is // region = &quot;eu-central-1&quot; region = &quot;us-west-2&quot; } . File: main.tf . data &quot;aws_vpc&quot; &quot;default&quot; { default = true } data &quot;aws_subnet_ids&quot; &quot;redshift&quot; { vpc_id = data.aws_vpc.default.id } resource &quot;aws_iam_role&quot; &quot;redshift&quot; { name = &quot;redshift_airflow_role&quot; description = &quot;Allows Redshift clusters to call AWS services&quot; assume_role_policy = jsonencode({ Version = &quot;2012-10-17&quot; Statement = [ { Action = &quot;sts:AssumeRole&quot; Effect = &quot;Allow&quot; Principal = { Service = &quot;redshift.amazonaws.com&quot; } }, ] }) tags = { Name = &quot;Redshift Airflow Role&quot; Quickhack = &quot;Redshift Cluster - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_iam_role_policy_attachment&quot; &quot;redshift&quot; { role = aws_iam_role.redshift.name policy_arn = &quot;arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess&quot; } resource &quot;aws_security_group&quot; &quot;redshift&quot; { name = &quot;redshift_security_group&quot; description = &quot;Authorise redshift cluster access&quot; vpc_id = data.aws_vpc.default.id ingress { description = &quot;Allow access to Redshift from anywhere in the world!!&quot; from_port = 5439 to_port = 5439 protocol = &quot;tcp&quot; cidr_blocks = [&quot;0.0.0.0/0&quot;] } egress { from_port = 0 to_port = 0 protocol = &quot;-1&quot; cidr_blocks = [&quot;0.0.0.0/0&quot;] } tags = { Name = &quot;Redshift Security Group&quot; Quickhack = &quot;Redshift Cluster - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;random_password&quot; &quot;redshift&quot; { length = 16 special = true override_special = &quot;!#$&amp;-_+.&quot; min_lower = 1 min_upper = 1 min_numeric = 1 min_special = 1 } resource &quot;aws_redshift_subnet_group&quot; &quot;redshift&quot; { name = &quot;redshift-subnet-group&quot; subnet_ids = data.aws_subnet_ids.redshift.ids tags = { Name = &quot;Redshift Subnet Group&quot; Quickhack = &quot;Redshift Cluster - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_redshift_cluster&quot; &quot;redshift&quot; { cluster_identifier = &quot;quickhack-redshift-cluster&quot; database_name = &quot;quickhack_db&quot; port = 5439 master_username = &quot;quickhack&quot; master_password = random_password.redshift.result node_type = &quot;dc2.large&quot; cluster_type = &quot;single-node&quot; number_of_nodes = 1 publicly_accessible = true cluster_subnet_group_name = aws_redshift_subnet_group.redshift.name vpc_security_group_ids = [aws_security_group.redshift.id] iam_roles = [aws_iam_role.redshift.arn] enhanced_vpc_routing = false skip_final_snapshot = true tags = { Name = &quot;Redshift Cluster&quot; Quickhack = &quot;Redshift Cluster - Publicly Accessible&quot; ManagedBy = &quot;Terraform&quot; } } . File: output.tf . output &quot;redshift_master_password&quot; { value = aws_redshift_cluster.redshift.master_password sensitive = true } output &quot;redshift_dns_name&quot; { value = aws_redshift_cluster.redshift.dns_name } . Connect to the database . PostgreSQL client can be used to connect to Redshift. The following Dockerfile installs postgresql-client-12 on a Ubuntu image and can be used to connect to the Redshift cluster. . FROM ubuntu:20.04 RUN apt-get update &amp;&amp; apt-get install -y postgresql-client-12 ENV PGPORT=5439 ENV PGUSER=&quot;quickhack&quot; ENV PGDATABASE=&quot;quickhack_db&quot; ENTRYPOINT [&quot;psql&quot;] . Build the docker image . $ docker build . -t postgresql-client:local . | Connect to the database using the docker container . The following command needs to be executed from the same directory where the terraform scripts are as it uses the terraform output to connect to set two environment variables required to the database. . $ docker run -e PGHOST=&quot;$(AWS_PROFILE=&quot;quickhacks&quot; terraform output -json | jq -r &quot;.redshift_dns_name.value&quot;)&quot; -e PGPASSWORD=&quot;$(AWS_PROFILE=&quot;quickhacks&quot; terraform output -json | jq -r &quot;.redshift_master_password.value&quot;)&quot; -it postgresql-client:local . | Type q to exit . | Versions . Terraform . $ terraform --version Terraform v0.15.0 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/redshift-cluster-publicly-accessible/",
    "relUrl": "/docs/aws/terraform/redshift-cluster-publicly-accessible/"
  }
  ,"32": {
    "title": "S3 & Cloud Front",
    "content": "S3 &amp; Cloud Front . . Terraform . &#9432; Note {%- if include.details -%} {{ include.details }} {%- endif -%} File: terraform.tf . The bucket quickhacks-terraform needs to be created beforehand. Refer to create S3 bucket for more information about that. . terraform { backend &quot;s3&quot; { bucket = &quot;quickhacks-terraform&quot; key = &quot;aws/s3-cloud-front/terraform.tfstate&quot; region = &quot;eu-central-1&quot; } } . File: providers.tf . provider &quot;aws&quot; { region = &quot;eu-central-1&quot; } . File: modules.tf . Used this module so that I can easily set the content type of the files. The files to be deployed are found in the folder ../web-app with respect to this file. . module &quot;template_files&quot; { source = &quot;hashicorp/dir/template&quot; base_dir = &quot;${path.module}/../web-app&quot; } . File: main.tf . locals { s3_origin_id = &quot;quickhacks_bucket&quot; s3_bucket_name = &quot;albertattard.quickhacks.cloud-front.bucket&quot; } resource &quot;aws_s3_bucket&quot; &quot;auickhacks_bucket&quot; { bucket = local.s3_bucket_name acl = &quot;public-read&quot; server_side_encryption_configuration { rule { apply_server_side_encryption_by_default { sse_algorithm = &quot;AES256&quot; } } } cors_rule { allowed_origins = [&quot;*&quot;] allowed_methods = [&quot;GET&quot;, &quot;HEAD&quot;] allowed_headers = [&quot;*&quot;] } website { index_document = &quot;index.html&quot; error_document = &quot;error.html&quot; } policy = &lt;&lt;EOF { &quot;Version&quot;: &quot;2008-10-17&quot;, &quot;Statement&quot;: [ { &quot;Sid&quot;: &quot;PublicReadForGetBucketObjects&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Principal&quot;: { &quot;AWS&quot;: &quot;*&quot; }, &quot;Action&quot;: &quot;s3:GetObject&quot;, &quot;Resource&quot;: &quot;arn:aws:s3:::${local.s3_bucket_name}/*&quot; } ] } EOF tags = { Name = &quot;Quickhacks - Bucket&quot; Quickhack = &quot;S3 and Cloud Front&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_s3_bucket_object&quot; &quot;auickhacks_bucket_object&quot; { for_each = module.template_files.files bucket = aws_s3_bucket.auickhacks_bucket.id key = each.key content_type = each.value.content_type source = each.value.source_path content = each.value.content etag = each.value.digests.md5 tags = { Name = &quot;Quickhacks - Bucket Object ${each.value.source_path}&quot; Quickhack = &quot;S3 and Cloud Front&quot; ManagedBy = &quot;Terraform&quot; } } resource &quot;aws_cloudfront_distribution&quot; &quot;auickhacks_s3_distribution&quot; { origin { domain_name = aws_s3_bucket.auickhacks_bucket.bucket_regional_domain_name origin_id = local.s3_origin_id } enabled = true default_root_object = &quot;index.html&quot; default_cache_behavior { allowed_methods = [&quot;GET&quot;, &quot;HEAD&quot;] cached_methods = [&quot;GET&quot;, &quot;HEAD&quot;] target_origin_id = local.s3_origin_id forwarded_values { query_string = false cookies { forward = &quot;none&quot; } } viewer_protocol_policy = &quot;allow-all&quot; min_ttl = 0 default_ttl = 3600 max_ttl = 86400 } restrictions { geo_restriction { restriction_type = &quot;none&quot; } } viewer_certificate { cloudfront_default_certificate = true } tags = { Name = &quot;Quickhacks - S3 Distribution&quot; Quickhack = &quot;S3 and Cloud Front&quot; ManagedBy = &quot;Terraform&quot; } } . File: output.tf . output &quot;domain_name&quot; { description = &quot;Domain name corresponding to the distribution&quot; value = try(aws_cloudfront_distribution.auickhacks_s3_distribution.domain_name, &quot;&quot;) } . Access the default root object . Access the default root object, which is set to be the index.html page. . $ curl -v &quot;https://$(AWS_PROFILE=&quot;quickhacks&quot; terraform -chdir=terraform output -json domain_name | jq -r &quot;.&quot;)&quot; . Versions . Terraform . $ terraform --version Terraform v0.15.0 . | cURL . $ curl --version curl 7.64.1 (x86_64-apple-darwin20.0) libcurl/7.64.1 (SecureTransport) LibreSSL/2.8.3 zlib/1.2.11 nghttp2/1.41.0 Release-Date: 2019-03-27 Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtsp smb smbs smtp smtps telnet tftp Features: AsynchDNS GSS-API HTTP2 HTTPS-proxy IPv6 Kerberos Largefile libz MultiSSL NTLM NTLM_WB SPNEGO SSL UnixSockets . | jq . $ jq --version jq-1.6 . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/terraform/s3-cloud-front/",
    "relUrl": "/docs/aws/terraform/s3-cloud-front/"
  }
  ,"33": {
    "title": "S3",
    "content": "S3 . . Create Bucket . $ AWS_PROFILE=&quot;quickhacks&quot; aws s3 mb s3://quickhacks-terraform --region eu-central-1 make_bucket: quickhacks-terraform . Delete Bucket . Use the --force arguments if the bucket is not empty . $ AWS_PROFILE=&quot;quickhacks&quot; aws s3 rb s3://quickhacks-terraform --region eu-central-1 --force remove_bucket: quickhacks-terraform . Versions . AWS CLI . $ aws --version aws-cli/2.1.30 Python/3.9.2 Darwin/20.3.0 source/x86_64 prompt/off . |",
    "url": "https://albertattard.github.io/quickhacks/docs/aws/cli/s3/",
    "relUrl": "/docs/aws/cli/s3/"
  }
  ,"34": {
    "title": "Setup environment (SDKMAN)",
    "content": "Setup environment (SDKMAN) . SDKMAN is a command line tool that allows us to install different versions of Java, Gradle, Maven and more. SDKMAN also takes care of setting environment variables for you. Installing SDKMAN. . Install . $ curl -s &quot;https://get.sdkman.io&quot; | bash $ source &quot;~/.sdkman/bin/sdkman-init.sh&quot; . | Check version after installation . $ sdk version SDKMAN SDKMAN 5.11.0+644 . Update SDKMAN if an older version is found . $ sdk update . | List all available Java versions . $ sdk list java . This will print all versions available to SDKMAN from different vendors. . ================================================================================ Available Java Versions ================================================================================ Vendor | Use | Version | Dist | Status | Identifier -- AdoptOpenJDK | | 16.0.0.j9 | adpt | | 16.0.0.j9-adpt | | 16.0.0.hs | adpt | | 16.0.0.hs-adpt | | 15.0.2.hs | adpt | local only | 15.0.2.hs-adpt | | 11.0.11.j9 | adpt | | 11.0.11.j9-adpt | | 11.0.11.hs | adpt | | 11.0.11.hs-adpt | | 11.0.10.j9 | adpt | | 11.0.10.j9-adpt | &gt;&gt;&gt; | 11.0.10.hs | adpt | installed | 11.0.10.hs-adpt | | 8.0.292.j9 | adpt | | 8.0.292.j9-adpt | | 8.0.292.hs | adpt | | 8.0.292.hs-adpt | | 8.0.282.j9 | adpt | | 8.0.282.j9-adpt | | 8.0.282.hs | adpt | | 8.0.282.hs-adpt ... . The above shows two versions of Java installed . 15.0.2.hs-adpt | 11.0.10.hs-adpt | The version 11.0.10.hs-adpt is not available anymore as there is a newer version available, the version 11.0.11.hs-adpt. That’s why it has the status of local only. . The version 11.0.10.hs-adpt is the current default version of Java. . | Install the latest Java 11 and Java 16 . $ sdk install java 11.0.11.hs-adpt $ sdk install java 16.0.0.hs-adpt . OpenJDK comes in two flavours: . HotSpot (...x.hs-adpt) is the VM from the OpenJDK community. It is the most widely used VM today and is used in Oracle’s JDK (reference). | Eclipse OpenJ9 (...x.j9-adpt) is the VM from the Eclipse community. It is an enterprise-grade VM designed for low memory footprint and fast start-up and is used in IBM’s JDK (reference) . | | Change the default Java . $ sdk default java 11.0.11.hs-adpt Default java version set 11.0.11.hs-adpt . Verify the version . $ java -version openjdk version &quot;11.0.10&quot; 2021-01-19 OpenJDK Runtime Environment AdoptOpenJDK (build 11.0.10+9) OpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.10+9, mixed mode) . Optionally, add an alias to simplify switching from one version to another. . $ vi ~/.oh-my-zsh/custom/dev.zsh . Add the aliases . source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot; alias java11=&#39;sdk default java 11.0.10.hs-adpt&#39; alias java15=&#39;sdk default java 15.0.2.hs-adpt&#39; . Note that the aliases will need to be updated when different versions of Java are added or removed. I have Java 11 and Java 15 installed. . To switch between versions just use java11 and java15. . $ java11 Default java version set to 11.0.10.hs-adpt . | Set the JAVA_HOME environment variable . $ echo $JAVA_HOME /Users/albertattard/.sdkman/candidates/java/current . If the environment variable is missing, it will be blank. Edit the ~/.zshrc to set the JAVA_HOME environment variable. . $ vi ~/.zshrc . Add the JAVA_HOME environment variable . export JAVA_HOME=&quot;~/.sdkman/candidates/java/current&quot; . Open a new terminal and verify that this was properly set. . $ ${JAVA_HOME}/bin/java -version openjdk version &quot;11.0.10&quot; 2021-01-19 OpenJDK Runtime Environment AdoptOpenJDK (build 11.0.10+9) OpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.10+9, mixed mode) . | For more details, please refer to: https://sdkman.io/install .",
    "url": "https://albertattard.github.io/quickhacks/docs/java/sdkman/",
    "relUrl": "/docs/java/sdkman/"
  }
  ,"35": {
    "title": "show",
    "content": "show . References . https://www.vuemastery.com/courses/intro-to-vue-3/conditional-rendering-vue3 | . File: index.html . {% highlight html %} {% raw_include quickhacks/vue/show/index.html %} {% endhighlight %} . File: main.js . {% highlight js %} {% raw_include quickhacks/vue/show/main.js %} {% endhighlight %} .",
    "url": "https://albertattard.github.io/quickhacks/docs/vue/show/",
    "relUrl": "/docs/vue/show/"
  }
  
}
